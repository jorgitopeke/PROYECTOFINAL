// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace NominaJJ
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TestNomina - Use 'TestNominaParams' to pass parameters into this method.
        /// </summary>
        public void TestNomina()
        {
            #region Variable Declarations
            WinEdit uIAppEdit = this.UINominaWindow.UIAppWindow.UIAppEdit;
            WinEdit uIApmEdit = this.UINominaWindow.UIApmWindow.UIApmEdit;
            WinEdit uINombreEdit = this.UINominaWindow.UINombreWindow.UINombreEdit;
            WinComboBox uISexoComboBox = this.UINominaWindow.UISexoWindow.UISexoComboBox;
            WinEdit uIItemEdit = this.UINominaWindow.UIItemWindow.UIItemEdit;
            WinComboBox uIDiaComboBox = this.UINominaWindow.UIDiaWindow.UIDiaComboBox;
            WinEdit uIItemEdit1 = this.UINominaWindow.UIItemWindow1.UIItemEdit;
            WinComboBox uIMesComboBox = this.UINominaWindow.UIMesWindow.UIMesComboBox;
            WinEdit uIItemEdit2 = this.UINominaWindow.UIItemWindow2.UIItemEdit;
            WinComboBox uIAnioComboBox = this.UINominaWindow.UIAnioWindow.UIAnioComboBox;
            WinEdit uIItemEdit3 = this.UINominaWindow.UIItemWindow3.UIItemEdit;
            WinComboBox uIEntidadComboBox = this.UINominaWindow.UIEntidadWindow.UIEntidadComboBox;
            WinEdit uICurpEdit = this.UINominaWindow.UICurpWindow.UICurpEdit;
            WinEdit uIRfcEdit = this.UINominaWindow.UIRfcWindow.UIRfcEdit;
            WinComboBox uISalarioDiarioComboBox = this.UINominaWindow.UIDiaiWindow.UISalarioDiarioComboBox;
            WinEdit uISalarioDiarioEdit = this.UINominaWindow.UIItemWindow4.UISalarioDiarioEdit;
            WinComboBox uIMesiComboBox = this.UINominaWindow.UIMesiWindow.UIMesiComboBox;
            WinEdit uIItemEdit4 = this.UINominaWindow.UIItemWindow5.UIItemEdit;
            WinComboBox uIAnioiComboBox = this.UINominaWindow.UIAnioiWindow.UIAnioiComboBox;
            WinEdit uIItemEdit5 = this.UINominaWindow.UIItemWindow6.UIItemEdit;
            WinEdit uITiempoEdit = this.UINominaWindow.UITiempoWindow.UITiempoEdit;
            WinEdit uIIDEdit = this.UINominaWindow.UIIDWindow.UIIDEdit;
            WinEdit uIPuestoEdit = this.UINominaWindow.UIPuestoWindow.UIPuestoEdit;
            WinEdit uISalariodiarioEdit1 = this.UINominaWindow.UISalariodiarioWindow.UISalariodiarioEdit;
            WinButton uIGenerarNominaButton = this.UINominaWindow.UIGenerarNominaWindow.UIGenerarNominaButton;
            #endregion

            // Last mouse action was not recorded.

            // Type 'MEDINA' in 'app' text box
            uIAppEdit.Text = this.TestNominaParams.UIAppEditText;

            // Type '{Tab}' in 'app' text box
            Keyboard.SendKeys(uIAppEdit, this.TestNominaParams.UIAppEditSendKeys, ModifierKeys.None);

            // Type 'ZARAGOZA' in 'apm' text box
            uIApmEdit.Text = this.TestNominaParams.UIApmEditText;

            // Type '{Tab}' in 'apm' text box
            Keyboard.SendKeys(uIApmEdit, this.TestNominaParams.UIApmEditSendKeys, ModifierKeys.None);

            // Type 'JORGE' in 'nombre' text box
            uINombreEdit.Text = this.TestNominaParams.UINombreEditText;

            // Type '{Tab}' in 'nombre' text box
            Keyboard.SendKeys(uINombreEdit, this.TestNominaParams.UINombreEditSendKeys, ModifierKeys.None);

            // Select 'H' in 'sexo' combo box
            uISexoComboBox.SelectedItem = this.TestNominaParams.UISexoComboBoxSelectedItem;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit, this.TestNominaParams.UIItemEditSendKeys, ModifierKeys.None);

            // Select '14' in 'dia' combo box
            uIDiaComboBox.SelectedItem = this.TestNominaParams.UIDiaComboBoxSelectedItem;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.TestNominaParams.UIItemEditSendKeys1, ModifierKeys.None);

            // Select 'Mayo' in 'mes' combo box
            uIMesComboBox.SelectedItem = this.TestNominaParams.UIMesComboBoxSelectedItem;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit2, this.TestNominaParams.UIItemEditSendKeys2, ModifierKeys.None);

            // Select '1991' in 'anio' combo box
            uIAnioComboBox.SelectedItem = this.TestNominaParams.UIAnioComboBoxSelectedItem;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit3, this.TestNominaParams.UIItemEditSendKeys3, ModifierKeys.None);

            // Select 'Zacatecas' in 'entidad' combo box
            uIEntidadComboBox.SelectedItem = this.TestNominaParams.UIEntidadComboBoxSelectedItem;

            // Type 'MEZJ910514HZSDRR00' in 'curp' text box
            uICurpEdit.Text = this.TestNominaParams.UICurpEditText;

            // Type '{Tab}' in 'curp' text box
            Keyboard.SendKeys(uICurpEdit, this.TestNominaParams.UICurpEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'rfc' text box
            Keyboard.SendKeys(uIRfcEdit, this.TestNominaParams.UIRfcEditSendKeys, ModifierKeys.None);

            // Select '04' in 'Salario Diario' combo box
            uISalarioDiarioComboBox.SelectedItem = this.TestNominaParams.UISalarioDiarioComboBoxSelectedItem;

            // Type '{Tab}' in 'Salario Diario' text box
            Keyboard.SendKeys(uISalarioDiarioEdit, this.TestNominaParams.UISalarioDiarioEditSendKeys, ModifierKeys.None);

            // Select 'Abril' in 'mesi' combo box
            uIMesiComboBox.SelectedItem = this.TestNominaParams.UIMesiComboBoxSelectedItem;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit4, this.TestNominaParams.UIItemEditSendKeys4, ModifierKeys.None);

            // Select '2012' in 'anioi' combo box
            uIAnioiComboBox.SelectedItem = this.TestNominaParams.UIAnioiComboBoxSelectedItem;

            // Type '{Tab}' in text box
            Keyboard.SendKeys(uIItemEdit5, this.TestNominaParams.UIItemEditSendKeys5, ModifierKeys.None);

            // Type '6' in 'tiempo' text box
            uITiempoEdit.Text = this.TestNominaParams.UITiempoEditText;

            // Type '{Tab}' in 'tiempo' text box
            Keyboard.SendKeys(uITiempoEdit, this.TestNominaParams.UITiempoEditSendKeys, ModifierKeys.None);

            // Type '09' in 'id' text box
            uIIDEdit.Text = this.TestNominaParams.UIIDEditText;

            // Type '{Tab}' in 'id' text box
            Keyboard.SendKeys(uIIDEdit, this.TestNominaParams.UIIDEditSendKeys, ModifierKeys.None);

            // Type 'kjolml' in 'puesto' text box
            uIPuestoEdit.Text = this.TestNominaParams.UIPuestoEditText;

            // Type '{Tab}' in 'puesto' text box
            Keyboard.SendKeys(uIPuestoEdit, this.TestNominaParams.UIPuestoEditSendKeys, ModifierKeys.None);

            // Type '150' in 'salariodiario' text box
            uISalariodiarioEdit1.Text = this.TestNominaParams.UISalariodiarioEditText;

            // Click 'Generar Nomina' button
            Mouse.Click(uIGenerarNominaButton, new Point(61, 16));
        }
        
        /// <summary>
        /// TestCURP - Use 'TestCURPExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TestCURP()
        {
            #region Variable Declarations
            WinEdit uICurpEdit = this.UINominaWindow.UICurpWindow.UICurpEdit;
            #endregion

            // Verify that the 'Text' property of 'curp' text box equals 'MEZJ910514HZSDRR00'
            Assert.AreEqual(this.TestCURPExpectedValues.UICurpEditText, uICurpEdit.Text, ":D");
        }
        
        /// <summary>
        /// TestRFC - Use 'TestRFCExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TestRFC()
        {
            #region Variable Declarations
            WinEdit uIRfcEdit = this.UINominaWindow.UIRfcWindow.UIRfcEdit;
            #endregion

            // Verify that the 'Text' property of 'rfc' text box equals 'MEZJ910514XX0'
            Assert.AreEqual(this.TestRFCExpectedValues.UIRfcEditText, uIRfcEdit.Text, ":D");
        }
        
        /// <summary>
        /// TestSalarioSemanal - Use 'TestSalarioSemanalExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TestSalarioSemanal()
        {
            #region Variable Declarations
            WinText uIItem1050Text = this.UINominaWindow.UIItem1050Window.UIItem1050Text;
            #endregion

            // Verify that the 'DisplayText' property of '1050' label equals '1050'
            Assert.AreEqual(this.TestSalarioSemanalExpectedValues.UIItem1050TextDisplayText, uIItem1050Text.DisplayText, ":D");
        }
        
        /// <summary>
        /// 150 es el salario diario
        /// </summary>
        public void TestSalarioQuincenal()
        {
            #region Variable Declarations
            WinText uIItem2250Text = this.UINominaWindow.UIItem2250Window.UIItem2250Text;
            #endregion

            // Verify that the 'DisplayText' property of '2250' label equals '2250'
            Assert.AreEqual(this.TestSalarioQuincenalExpectedValues.UIItem2250TextDisplayText, uIItem2250Text.DisplayText, ":D");
        }
        
        /// <summary>
        /// 150 es el salario diario
        /// </summary>
        public void TestSalarioMensual()
        {
            #region Variable Declarations
            WinText uIItem4500Text = this.UINominaWindow.UIItem4500Window.UIItem4500Text;
            #endregion

            // Verify that the 'DisplayText' property of '4500' label equals '4500'
            Assert.AreEqual(this.TestSalarioMensualExpectedValues.UIItem4500TextDisplayText, uIItem4500Text.DisplayText, ":D");
        }
        
        /// <summary>
        /// 150 es el salario diario
        /// </summary>
        public void TestPrimaVacacional()
        {
            #region Variable Declarations
            WinText uIItem225Text = this.UINominaWindow.UIItem225Window.UIItem225Text;
            #endregion

            // Verify that the 'DisplayText' property of '225' label equals '225'
            Assert.AreEqual(this.TestPrimaVacacionalExpectedValues.UIItem225TextDisplayText, uIItem225Text.DisplayText, ":D");
        }
        
        /// <summary>
        /// 150 es el salario diario
        /// </summary>
        public void TestAguinaldo()
        {
            #region Variable Declarations
            WinText uIItem2250Text = this.UINominaWindow.UIItem2250Window1.UIItem2250Text;
            #endregion

            // Verify that the 'DisplayText' property of '2250' label equals '2250'
            Assert.AreEqual(this.TestAguinaldoExpectedValues.UIItem2250TextDisplayText, uIItem2250Text.DisplayText, ":D");
        }
        
        /// <summary>
        /// 150 es el salario diario
        /// </summary>
        public void TestSalarioBase()
        {
            #region Variable Declarations
            WinText uIItem1075Text = this.UINominaWindow.UIItem1075Window.UIItem1075Text;
            #endregion

            // Verify that the 'DisplayText' property of '1075' label equals '1075'
            Assert.AreEqual(this.TestSalarioBaseExpectedValues.UIItem1075TextDisplayText, uIItem1075Text.DisplayText, ":D");
        }
        
        /// <summary>
        /// esta accion debe de dejar en limpio todos los campos
        /// </summary>
        public void TestLimpiarNomina()
        {
            #region Variable Declarations
            WinButton uILimpiarNominaButton = this.UINominaWindow.UILimpiarNominaWindow.UILimpiarNominaButton;
            #endregion

            // Click 'Limpiar Nomina' button
            Mouse.Click(uILimpiarNominaButton, new Point(43, 19));
        }
        
        /// <summary>
        /// AssertMethodLimpiaAP - Use 'AssertMethodLimpiaAPExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaAP()
        {
            #region Variable Declarations
            WinEdit uIAppEdit = this.UINominaWindow.UIAppWindow.UIAppEdit;
            #endregion

            // Verify that the 'Text' property of 'app' text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiaAPExpectedValues.UIAppEditText, uIAppEdit.Text);
        }
        
        /// <summary>
        /// AssertMethodLimpiaAM - Use 'AssertMethodLimpiaAMExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaAM()
        {
            #region Variable Declarations
            WinEdit uIApmEdit = this.UINominaWindow.UIApmWindow.UIApmEdit;
            #endregion

            // Verify that the 'Text' property of 'apm' text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiaAMExpectedValues.UIApmEditText, uIApmEdit.Text);
        }
        
        /// <summary>
        /// AssertMethodLimpiaNombre - Use 'AssertMethodLimpiaNombreExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaNombre()
        {
            #region Variable Declarations
            WinEdit uINombreEdit = this.UINominaWindow.UINombreWindow.UINombreEdit;
            #endregion

            // Verify that the 'Text' property of 'nombre' text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiaNombreExpectedValues.UINombreEditText, uINombreEdit.Text);
        }
        
        /// <summary>
        /// AssertMethodLimpiaSexo - Use 'AssertMethodLimpiaSexoExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaSexo()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UINominaWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Verify that the 'Text' property of text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiaSexoExpectedValues.UIItemEditText, uIItemEdit.Text);
        }
        
        /// <summary>
        /// AssertMethodLipiad - Use 'AssertMethodLipiadExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLipiad()
        {
            #region Variable Declarations
            WinWindow uIItemWindow = this.UINominaWindow.UIDiaWindow.UIItemWindow;
            #endregion

            // Verify that the 'HelpText' property of window equals ''
            Assert.AreEqual(this.AssertMethodLipiadExpectedValues.UIItemWindowHelpText, uIItemWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiam - Use 'AssertMethodLimpiamExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiam()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UINominaWindow.UIItemWindow2.UIItemEdit;
            #endregion

            // Verify that the 'HelpText' property of text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiamExpectedValues.UIItemEditHelpText, uIItemEdit.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaA - Use 'AssertMethodLimpiaAExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaA()
        {
            #region Variable Declarations
            WinWindow uIItemWindow = this.UINominaWindow.UIAnioWindow.UIItemWindow;
            #endregion

            // Verify that the 'HelpText' property of window equals ''
            Assert.AreEqual(this.AssertMethodLimpiaAExpectedValues.UIItemWindowHelpText, uIItemWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaentidad - Use 'AssertMethodLimpiaentidadExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaentidad()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UINominaWindow.UIItemWindow7.UIItemEdit;
            #endregion

            // Verify that the 'HelpText' property of text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiaentidadExpectedValues.UIItemEditHelpText, uIItemEdit.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaCURP - Use 'AssertMethodLimpiaCURPExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaCURP()
        {
            #region Variable Declarations
            WinWindow uICurpWindow = this.UINominaWindow.UIDatosgeneralesGroup.UICurpWindow;
            #endregion

            // Verify that the 'HelpText' property of 'curp' window equals ''
            Assert.AreEqual(this.AssertMethodLimpiaCURPExpectedValues.UICurpWindowHelpText, uICurpWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaRFC - Use 'AssertMethodLimpiaRFCExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaRFC()
        {
            #region Variable Declarations
            WinEdit uIRfcEdit = this.UINominaWindow.UIRfcWindow.UIRfcEdit;
            #endregion

            // Verify that the 'HelpText' property of 'rfc' text box equals ''
            Assert.AreEqual(this.AssertMethodLimpiaRFCExpectedValues.UIRfcEditHelpText, uIRfcEdit.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaDT - Use 'AssertMethodLimpiaDTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaDT()
        {
            #region Variable Declarations
            WinGroup uIDatosdetrabajoGroup = this.UINominaWindow.UIDatosdetrabajoWindow.UIDatosdetrabajoGroup;
            #endregion

            // Verify that the 'HelpText' property of 'Datos de trabajo' group equals ''
            Assert.AreEqual(this.AssertMethodLimpiaDTExpectedValues.UIDatosdetrabajoGroupHelpText, uIDatosdetrabajoGroup.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLipiass - Use 'AssertMethodLipiassExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLipiass()
        {
            #region Variable Declarations
            WinWindow uISemanalWindow = this.UINominaWindow.UIRecursosGroup.UISemanalWindow;
            #endregion

            // Verify that the 'HelpText' property of 'semanal' window equals ''
            Assert.AreEqual(this.AssertMethodLipiassExpectedValues.UISemanalWindowHelpText, uISemanalWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaSq - Use 'AssertMethodLimpiaSqExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaSq()
        {
            #region Variable Declarations
            WinWindow uIQuincenalWindow = this.UINominaWindow.UIRecursosGroup.UIQuincenalWindow;
            #endregion

            // Verify that the 'HelpText' property of 'quincenal' window equals ''
            Assert.AreEqual(this.AssertMethodLimpiaSqExpectedValues.UIQuincenalWindowHelpText, uIQuincenalWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaSm - Use 'AssertMethodLimpiaSmExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaSm()
        {
            #region Variable Declarations
            WinText uISalarioMensualText = this.UINominaWindow.UISalarioMensualWindow.UISalarioMensualText;
            #endregion

            // Verify that the 'HelpText' property of 'Salario Mensual' label equals ''
            Assert.AreEqual(this.AssertMethodLimpiaSmExpectedValues.UISalarioMensualTextHelpText, uISalarioMensualText.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaPv - Use 'AssertMethodLimpiaPvExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaPv()
        {
            #region Variable Declarations
            WinWindow uIPrimaWindow = this.UINominaWindow.UIRecursosGroup.UIPrimaWindow;
            #endregion

            // Verify that the 'HelpText' property of 'prima' window equals ''
            Assert.AreEqual(this.AssertMethodLimpiaPvExpectedValues.UIPrimaWindowHelpText, uIPrimaWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaAg - Use 'AssertMethodLimpiaAgExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaAg()
        {
            #region Variable Declarations
            WinWindow uIAguinaldoWindow = this.UINominaWindow.UIRecursosGroup.UIAguinaldoWindow;
            #endregion

            // Verify that the 'HelpText' property of 'aguinaldo' window equals ''
            Assert.AreEqual(this.AssertMethodLimpiaAgExpectedValues.UIAguinaldoWindowHelpText, uIAguinaldoWindow.HelpText);
        }
        
        /// <summary>
        /// AssertMethodLimpiaSb - Use 'AssertMethodLimpiaSbExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodLimpiaSb()
        {
            #region Variable Declarations
            WinWindow uISalariobaseWindow = this.UINominaWindow.UIRecursosGroup.UISalariobaseWindow;
            #endregion

            // Verify that the 'HelpText' property of 'salariobase' window equals ''
            Assert.AreEqual(this.AssertMethodLimpiaSbExpectedValues.UISalariobaseWindowHelpText, uISalariobaseWindow.HelpText);
        }
        
        #region Properties
        public virtual TestNominaParams TestNominaParams
        {
            get
            {
                if ((this.mTestNominaParams == null))
                {
                    this.mTestNominaParams = new TestNominaParams();
                }
                return this.mTestNominaParams;
            }
        }
        
        public virtual TestCURPExpectedValues TestCURPExpectedValues
        {
            get
            {
                if ((this.mTestCURPExpectedValues == null))
                {
                    this.mTestCURPExpectedValues = new TestCURPExpectedValues();
                }
                return this.mTestCURPExpectedValues;
            }
        }
        
        public virtual TestRFCExpectedValues TestRFCExpectedValues
        {
            get
            {
                if ((this.mTestRFCExpectedValues == null))
                {
                    this.mTestRFCExpectedValues = new TestRFCExpectedValues();
                }
                return this.mTestRFCExpectedValues;
            }
        }
        
        public virtual TestSalarioSemanalExpectedValues TestSalarioSemanalExpectedValues
        {
            get
            {
                if ((this.mTestSalarioSemanalExpectedValues == null))
                {
                    this.mTestSalarioSemanalExpectedValues = new TestSalarioSemanalExpectedValues();
                }
                return this.mTestSalarioSemanalExpectedValues;
            }
        }
        
        public virtual TestSalarioQuincenalExpectedValues TestSalarioQuincenalExpectedValues
        {
            get
            {
                if ((this.mTestSalarioQuincenalExpectedValues == null))
                {
                    this.mTestSalarioQuincenalExpectedValues = new TestSalarioQuincenalExpectedValues();
                }
                return this.mTestSalarioQuincenalExpectedValues;
            }
        }
        
        public virtual TestSalarioMensualExpectedValues TestSalarioMensualExpectedValues
        {
            get
            {
                if ((this.mTestSalarioMensualExpectedValues == null))
                {
                    this.mTestSalarioMensualExpectedValues = new TestSalarioMensualExpectedValues();
                }
                return this.mTestSalarioMensualExpectedValues;
            }
        }
        
        public virtual TestPrimaVacacionalExpectedValues TestPrimaVacacionalExpectedValues
        {
            get
            {
                if ((this.mTestPrimaVacacionalExpectedValues == null))
                {
                    this.mTestPrimaVacacionalExpectedValues = new TestPrimaVacacionalExpectedValues();
                }
                return this.mTestPrimaVacacionalExpectedValues;
            }
        }
        
        public virtual TestAguinaldoExpectedValues TestAguinaldoExpectedValues
        {
            get
            {
                if ((this.mTestAguinaldoExpectedValues == null))
                {
                    this.mTestAguinaldoExpectedValues = new TestAguinaldoExpectedValues();
                }
                return this.mTestAguinaldoExpectedValues;
            }
        }
        
        public virtual TestSalarioBaseExpectedValues TestSalarioBaseExpectedValues
        {
            get
            {
                if ((this.mTestSalarioBaseExpectedValues == null))
                {
                    this.mTestSalarioBaseExpectedValues = new TestSalarioBaseExpectedValues();
                }
                return this.mTestSalarioBaseExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaAPExpectedValues AssertMethodLimpiaAPExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaAPExpectedValues == null))
                {
                    this.mAssertMethodLimpiaAPExpectedValues = new AssertMethodLimpiaAPExpectedValues();
                }
                return this.mAssertMethodLimpiaAPExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaAMExpectedValues AssertMethodLimpiaAMExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaAMExpectedValues == null))
                {
                    this.mAssertMethodLimpiaAMExpectedValues = new AssertMethodLimpiaAMExpectedValues();
                }
                return this.mAssertMethodLimpiaAMExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaNombreExpectedValues AssertMethodLimpiaNombreExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaNombreExpectedValues == null))
                {
                    this.mAssertMethodLimpiaNombreExpectedValues = new AssertMethodLimpiaNombreExpectedValues();
                }
                return this.mAssertMethodLimpiaNombreExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaSexoExpectedValues AssertMethodLimpiaSexoExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaSexoExpectedValues == null))
                {
                    this.mAssertMethodLimpiaSexoExpectedValues = new AssertMethodLimpiaSexoExpectedValues();
                }
                return this.mAssertMethodLimpiaSexoExpectedValues;
            }
        }
        
        public virtual AssertMethodLipiadExpectedValues AssertMethodLipiadExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLipiadExpectedValues == null))
                {
                    this.mAssertMethodLipiadExpectedValues = new AssertMethodLipiadExpectedValues();
                }
                return this.mAssertMethodLipiadExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiamExpectedValues AssertMethodLimpiamExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiamExpectedValues == null))
                {
                    this.mAssertMethodLimpiamExpectedValues = new AssertMethodLimpiamExpectedValues();
                }
                return this.mAssertMethodLimpiamExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaAExpectedValues AssertMethodLimpiaAExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaAExpectedValues == null))
                {
                    this.mAssertMethodLimpiaAExpectedValues = new AssertMethodLimpiaAExpectedValues();
                }
                return this.mAssertMethodLimpiaAExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaentidadExpectedValues AssertMethodLimpiaentidadExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaentidadExpectedValues == null))
                {
                    this.mAssertMethodLimpiaentidadExpectedValues = new AssertMethodLimpiaentidadExpectedValues();
                }
                return this.mAssertMethodLimpiaentidadExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaCURPExpectedValues AssertMethodLimpiaCURPExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaCURPExpectedValues == null))
                {
                    this.mAssertMethodLimpiaCURPExpectedValues = new AssertMethodLimpiaCURPExpectedValues();
                }
                return this.mAssertMethodLimpiaCURPExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaRFCExpectedValues AssertMethodLimpiaRFCExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaRFCExpectedValues == null))
                {
                    this.mAssertMethodLimpiaRFCExpectedValues = new AssertMethodLimpiaRFCExpectedValues();
                }
                return this.mAssertMethodLimpiaRFCExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaDTExpectedValues AssertMethodLimpiaDTExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaDTExpectedValues == null))
                {
                    this.mAssertMethodLimpiaDTExpectedValues = new AssertMethodLimpiaDTExpectedValues();
                }
                return this.mAssertMethodLimpiaDTExpectedValues;
            }
        }
        
        public virtual AssertMethodLipiassExpectedValues AssertMethodLipiassExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLipiassExpectedValues == null))
                {
                    this.mAssertMethodLipiassExpectedValues = new AssertMethodLipiassExpectedValues();
                }
                return this.mAssertMethodLipiassExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaSqExpectedValues AssertMethodLimpiaSqExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaSqExpectedValues == null))
                {
                    this.mAssertMethodLimpiaSqExpectedValues = new AssertMethodLimpiaSqExpectedValues();
                }
                return this.mAssertMethodLimpiaSqExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaSmExpectedValues AssertMethodLimpiaSmExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaSmExpectedValues == null))
                {
                    this.mAssertMethodLimpiaSmExpectedValues = new AssertMethodLimpiaSmExpectedValues();
                }
                return this.mAssertMethodLimpiaSmExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaPvExpectedValues AssertMethodLimpiaPvExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaPvExpectedValues == null))
                {
                    this.mAssertMethodLimpiaPvExpectedValues = new AssertMethodLimpiaPvExpectedValues();
                }
                return this.mAssertMethodLimpiaPvExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaAgExpectedValues AssertMethodLimpiaAgExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaAgExpectedValues == null))
                {
                    this.mAssertMethodLimpiaAgExpectedValues = new AssertMethodLimpiaAgExpectedValues();
                }
                return this.mAssertMethodLimpiaAgExpectedValues;
            }
        }
        
        public virtual AssertMethodLimpiaSbExpectedValues AssertMethodLimpiaSbExpectedValues
        {
            get
            {
                if ((this.mAssertMethodLimpiaSbExpectedValues == null))
                {
                    this.mAssertMethodLimpiaSbExpectedValues = new AssertMethodLimpiaSbExpectedValues();
                }
                return this.mAssertMethodLimpiaSbExpectedValues;
            }
        }
        
        public UINominaWindow UINominaWindow
        {
            get
            {
                if ((this.mUINominaWindow == null))
                {
                    this.mUINominaWindow = new UINominaWindow();
                }
                return this.mUINominaWindow;
            }
        }
        #endregion
        
        #region Fields
        private TestNominaParams mTestNominaParams;
        
        private TestCURPExpectedValues mTestCURPExpectedValues;
        
        private TestRFCExpectedValues mTestRFCExpectedValues;
        
        private TestSalarioSemanalExpectedValues mTestSalarioSemanalExpectedValues;
        
        private TestSalarioQuincenalExpectedValues mTestSalarioQuincenalExpectedValues;
        
        private TestSalarioMensualExpectedValues mTestSalarioMensualExpectedValues;
        
        private TestPrimaVacacionalExpectedValues mTestPrimaVacacionalExpectedValues;
        
        private TestAguinaldoExpectedValues mTestAguinaldoExpectedValues;
        
        private TestSalarioBaseExpectedValues mTestSalarioBaseExpectedValues;
        
        private AssertMethodLimpiaAPExpectedValues mAssertMethodLimpiaAPExpectedValues;
        
        private AssertMethodLimpiaAMExpectedValues mAssertMethodLimpiaAMExpectedValues;
        
        private AssertMethodLimpiaNombreExpectedValues mAssertMethodLimpiaNombreExpectedValues;
        
        private AssertMethodLimpiaSexoExpectedValues mAssertMethodLimpiaSexoExpectedValues;
        
        private AssertMethodLipiadExpectedValues mAssertMethodLipiadExpectedValues;
        
        private AssertMethodLimpiamExpectedValues mAssertMethodLimpiamExpectedValues;
        
        private AssertMethodLimpiaAExpectedValues mAssertMethodLimpiaAExpectedValues;
        
        private AssertMethodLimpiaentidadExpectedValues mAssertMethodLimpiaentidadExpectedValues;
        
        private AssertMethodLimpiaCURPExpectedValues mAssertMethodLimpiaCURPExpectedValues;
        
        private AssertMethodLimpiaRFCExpectedValues mAssertMethodLimpiaRFCExpectedValues;
        
        private AssertMethodLimpiaDTExpectedValues mAssertMethodLimpiaDTExpectedValues;
        
        private AssertMethodLipiassExpectedValues mAssertMethodLipiassExpectedValues;
        
        private AssertMethodLimpiaSqExpectedValues mAssertMethodLimpiaSqExpectedValues;
        
        private AssertMethodLimpiaSmExpectedValues mAssertMethodLimpiaSmExpectedValues;
        
        private AssertMethodLimpiaPvExpectedValues mAssertMethodLimpiaPvExpectedValues;
        
        private AssertMethodLimpiaAgExpectedValues mAssertMethodLimpiaAgExpectedValues;
        
        private AssertMethodLimpiaSbExpectedValues mAssertMethodLimpiaSbExpectedValues;
        
        private UINominaWindow mUINominaWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestNomina'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestNominaParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'MEDINA' in 'app' text box
        /// </summary>
        public string UIAppEditText = "MEDINA";
        
        /// <summary>
        /// Type '{Tab}' in 'app' text box
        /// </summary>
        public string UIAppEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'ZARAGOZA' in 'apm' text box
        /// </summary>
        public string UIApmEditText = "ZARAGOZA";
        
        /// <summary>
        /// Type '{Tab}' in 'apm' text box
        /// </summary>
        public string UIApmEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'JORGE' in 'nombre' text box
        /// </summary>
        public string UINombreEditText = "JORGE";
        
        /// <summary>
        /// Type '{Tab}' in 'nombre' text box
        /// </summary>
        public string UINombreEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'H' in 'sexo' combo box
        /// </summary>
        public string UISexoComboBoxSelectedItem = "H";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select '14' in 'dia' combo box
        /// </summary>
        public string UIDiaComboBoxSelectedItem = "14";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Select 'Mayo' in 'mes' combo box
        /// </summary>
        public string UIMesComboBoxSelectedItem = "Mayo";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys2 = "{Tab}";
        
        /// <summary>
        /// Select '1991' in 'anio' combo box
        /// </summary>
        public string UIAnioComboBoxSelectedItem = "1991";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys3 = "{Tab}";
        
        /// <summary>
        /// Select 'Zacatecas' in 'entidad' combo box
        /// </summary>
        public string UIEntidadComboBoxSelectedItem = "Zacatecas";
        
        /// <summary>
        /// Type 'MEZJ910514HZSDRR00' in 'curp' text box
        /// </summary>
        public string UICurpEditText = "MEZJ910514HZSDRR00";
        
        /// <summary>
        /// Type '{Tab}' in 'curp' text box
        /// </summary>
        public string UICurpEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'rfc' text box
        /// </summary>
        public string UIRfcEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select '04' in 'Salario Diario' combo box
        /// </summary>
        public string UISalarioDiarioComboBoxSelectedItem = "04";
        
        /// <summary>
        /// Type '{Tab}' in 'Salario Diario' text box
        /// </summary>
        public string UISalarioDiarioEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Select 'Abril' in 'mesi' combo box
        /// </summary>
        public string UIMesiComboBoxSelectedItem = "Abril";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys4 = "{Tab}";
        
        /// <summary>
        /// Select '2012' in 'anioi' combo box
        /// </summary>
        public string UIAnioiComboBoxSelectedItem = "2012";
        
        /// <summary>
        /// Type '{Tab}' in text box
        /// </summary>
        public string UIItemEditSendKeys5 = "{Tab}";
        
        /// <summary>
        /// Type '6' in 'tiempo' text box
        /// </summary>
        public string UITiempoEditText = "6";
        
        /// <summary>
        /// Type '{Tab}' in 'tiempo' text box
        /// </summary>
        public string UITiempoEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '09' in 'id' text box
        /// </summary>
        public string UIIDEditText = "09";
        
        /// <summary>
        /// Type '{Tab}' in 'id' text box
        /// </summary>
        public string UIIDEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kjolml' in 'puesto' text box
        /// </summary>
        public string UIPuestoEditText = "kjolml";
        
        /// <summary>
        /// Type '{Tab}' in 'puesto' text box
        /// </summary>
        public string UIPuestoEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '150' in 'salariodiario' text box
        /// </summary>
        public string UISalariodiarioEditText = "150";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestCURP'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestCURPExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'curp' text box equals 'MEZJ910514HZSDRR00'
        /// </summary>
        public string UICurpEditText = "MEZJ910514HZSDRR00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestRFC'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestRFCExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'rfc' text box equals 'MEZJ910514XX0'
        /// </summary>
        public string UIRfcEditText = "MEZJ910514XX0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestSalarioSemanal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestSalarioSemanalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '1050' label equals '1050'
        /// </summary>
        public string UIItem1050TextDisplayText = "1050";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestSalarioQuincenal'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestSalarioQuincenalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '2250' label equals '2250'
        /// </summary>
        public string UIItem2250TextDisplayText = "2250";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestSalarioMensual'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestSalarioMensualExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '4500' label equals '4500'
        /// </summary>
        public string UIItem4500TextDisplayText = "4500";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestPrimaVacacional'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestPrimaVacacionalExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '225' label equals '225'
        /// </summary>
        public string UIItem225TextDisplayText = "225";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestAguinaldo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestAguinaldoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '2250' label equals '2250'
        /// </summary>
        public string UIItem2250TextDisplayText = "2250";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestSalarioBase'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestSalarioBaseExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '1075' label equals '1075'
        /// </summary>
        public string UIItem1075TextDisplayText = "1075";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaAP'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaAPExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'app' text box equals ''
        /// </summary>
        public string UIAppEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaAM'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaAMExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'apm' text box equals ''
        /// </summary>
        public string UIApmEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaNombre'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaNombreExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'nombre' text box equals ''
        /// </summary>
        public string UINombreEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaSexo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaSexoExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of text box equals ''
        /// </summary>
        public string UIItemEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLipiad'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLipiadExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of window equals ''
        /// </summary>
        public string UIItemWindowHelpText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiam'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiamExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of text box equals ''
        /// </summary>
        public string UIItemEditHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaA'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaAExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of window equals ''
        /// </summary>
        public string UIItemWindowHelpText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaentidad'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaentidadExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of text box equals ''
        /// </summary>
        public string UIItemEditHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaCURP'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaCURPExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'curp' window equals ''
        /// </summary>
        public string UICurpWindowHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaRFC'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaRFCExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'rfc' text box equals ''
        /// </summary>
        public string UIRfcEditHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaDT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaDTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'Datos de trabajo' group equals ''
        /// </summary>
        public string UIDatosdetrabajoGroupHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLipiass'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLipiassExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'semanal' window equals ''
        /// </summary>
        public string UISemanalWindowHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaSq'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaSqExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'quincenal' window equals ''
        /// </summary>
        public string UIQuincenalWindowHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaSm'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaSmExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'Salario Mensual' label equals ''
        /// </summary>
        public string UISalarioMensualTextHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaPv'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaPvExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'prima' window equals ''
        /// </summary>
        public string UIPrimaWindowHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaAg'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaAgExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'aguinaldo' window equals ''
        /// </summary>
        public string UIAguinaldoWindowHelpText = null;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodLimpiaSb'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodLimpiaSbExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'HelpText' property of 'salariobase' window equals ''
        /// </summary>
        public string UISalariobaseWindowHelpText = null;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UINominaWindow : WinWindow
    {
        
        public UINominaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Nomina";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public UIAppWindow UIAppWindow
        {
            get
            {
                if ((this.mUIAppWindow == null))
                {
                    this.mUIAppWindow = new UIAppWindow(this);
                }
                return this.mUIAppWindow;
            }
        }
        
        public UIApmWindow UIApmWindow
        {
            get
            {
                if ((this.mUIApmWindow == null))
                {
                    this.mUIApmWindow = new UIApmWindow(this);
                }
                return this.mUIApmWindow;
            }
        }
        
        public UINombreWindow UINombreWindow
        {
            get
            {
                if ((this.mUINombreWindow == null))
                {
                    this.mUINombreWindow = new UINombreWindow(this);
                }
                return this.mUINombreWindow;
            }
        }
        
        public UISexoWindow UISexoWindow
        {
            get
            {
                if ((this.mUISexoWindow == null))
                {
                    this.mUISexoWindow = new UISexoWindow(this);
                }
                return this.mUISexoWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDiaWindow UIDiaWindow
        {
            get
            {
                if ((this.mUIDiaWindow == null))
                {
                    this.mUIDiaWindow = new UIDiaWindow(this);
                }
                return this.mUIDiaWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIMesWindow UIMesWindow
        {
            get
            {
                if ((this.mUIMesWindow == null))
                {
                    this.mUIMesWindow = new UIMesWindow(this);
                }
                return this.mUIMesWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIAnioWindow UIAnioWindow
        {
            get
            {
                if ((this.mUIAnioWindow == null))
                {
                    this.mUIAnioWindow = new UIAnioWindow(this);
                }
                return this.mUIAnioWindow;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIEntidadWindow UIEntidadWindow
        {
            get
            {
                if ((this.mUIEntidadWindow == null))
                {
                    this.mUIEntidadWindow = new UIEntidadWindow(this);
                }
                return this.mUIEntidadWindow;
            }
        }
        
        public UICurpWindow UICurpWindow
        {
            get
            {
                if ((this.mUICurpWindow == null))
                {
                    this.mUICurpWindow = new UICurpWindow(this);
                }
                return this.mUICurpWindow;
            }
        }
        
        public UIRfcWindow UIRfcWindow
        {
            get
            {
                if ((this.mUIRfcWindow == null))
                {
                    this.mUIRfcWindow = new UIRfcWindow(this);
                }
                return this.mUIRfcWindow;
            }
        }
        
        public UIDiaiWindow UIDiaiWindow
        {
            get
            {
                if ((this.mUIDiaiWindow == null))
                {
                    this.mUIDiaiWindow = new UIDiaiWindow(this);
                }
                return this.mUIDiaiWindow;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIMesiWindow UIMesiWindow
        {
            get
            {
                if ((this.mUIMesiWindow == null))
                {
                    this.mUIMesiWindow = new UIMesiWindow(this);
                }
                return this.mUIMesiWindow;
            }
        }
        
        public UIItemWindow5 UIItemWindow5
        {
            get
            {
                if ((this.mUIItemWindow5 == null))
                {
                    this.mUIItemWindow5 = new UIItemWindow5(this);
                }
                return this.mUIItemWindow5;
            }
        }
        
        public UIAnioiWindow UIAnioiWindow
        {
            get
            {
                if ((this.mUIAnioiWindow == null))
                {
                    this.mUIAnioiWindow = new UIAnioiWindow(this);
                }
                return this.mUIAnioiWindow;
            }
        }
        
        public UIItemWindow6 UIItemWindow6
        {
            get
            {
                if ((this.mUIItemWindow6 == null))
                {
                    this.mUIItemWindow6 = new UIItemWindow6(this);
                }
                return this.mUIItemWindow6;
            }
        }
        
        public UITiempoWindow UITiempoWindow
        {
            get
            {
                if ((this.mUITiempoWindow == null))
                {
                    this.mUITiempoWindow = new UITiempoWindow(this);
                }
                return this.mUITiempoWindow;
            }
        }
        
        public UIIDWindow UIIDWindow
        {
            get
            {
                if ((this.mUIIDWindow == null))
                {
                    this.mUIIDWindow = new UIIDWindow(this);
                }
                return this.mUIIDWindow;
            }
        }
        
        public UIPuestoWindow UIPuestoWindow
        {
            get
            {
                if ((this.mUIPuestoWindow == null))
                {
                    this.mUIPuestoWindow = new UIPuestoWindow(this);
                }
                return this.mUIPuestoWindow;
            }
        }
        
        public UISalariodiarioWindow UISalariodiarioWindow
        {
            get
            {
                if ((this.mUISalariodiarioWindow == null))
                {
                    this.mUISalariodiarioWindow = new UISalariodiarioWindow(this);
                }
                return this.mUISalariodiarioWindow;
            }
        }
        
        public UIGenerarNominaWindow UIGenerarNominaWindow
        {
            get
            {
                if ((this.mUIGenerarNominaWindow == null))
                {
                    this.mUIGenerarNominaWindow = new UIGenerarNominaWindow(this);
                }
                return this.mUIGenerarNominaWindow;
            }
        }
        
        public UIItem1050Window UIItem1050Window
        {
            get
            {
                if ((this.mUIItem1050Window == null))
                {
                    this.mUIItem1050Window = new UIItem1050Window(this);
                }
                return this.mUIItem1050Window;
            }
        }
        
        public UIItem2250Window UIItem2250Window
        {
            get
            {
                if ((this.mUIItem2250Window == null))
                {
                    this.mUIItem2250Window = new UIItem2250Window(this);
                }
                return this.mUIItem2250Window;
            }
        }
        
        public UIItem4500Window UIItem4500Window
        {
            get
            {
                if ((this.mUIItem4500Window == null))
                {
                    this.mUIItem4500Window = new UIItem4500Window(this);
                }
                return this.mUIItem4500Window;
            }
        }
        
        public UIItem225Window UIItem225Window
        {
            get
            {
                if ((this.mUIItem225Window == null))
                {
                    this.mUIItem225Window = new UIItem225Window(this);
                }
                return this.mUIItem225Window;
            }
        }
        
        public UIItem2250Window1 UIItem2250Window1
        {
            get
            {
                if ((this.mUIItem2250Window1 == null))
                {
                    this.mUIItem2250Window1 = new UIItem2250Window1(this);
                }
                return this.mUIItem2250Window1;
            }
        }
        
        public UIItem1075Window UIItem1075Window
        {
            get
            {
                if ((this.mUIItem1075Window == null))
                {
                    this.mUIItem1075Window = new UIItem1075Window(this);
                }
                return this.mUIItem1075Window;
            }
        }
        
        public UILimpiarNominaWindow UILimpiarNominaWindow
        {
            get
            {
                if ((this.mUILimpiarNominaWindow == null))
                {
                    this.mUILimpiarNominaWindow = new UILimpiarNominaWindow(this);
                }
                return this.mUILimpiarNominaWindow;
            }
        }
        
        public UIItemWindow7 UIItemWindow7
        {
            get
            {
                if ((this.mUIItemWindow7 == null))
                {
                    this.mUIItemWindow7 = new UIItemWindow7(this);
                }
                return this.mUIItemWindow7;
            }
        }
        
        public UIDatosgeneralesGroup UIDatosgeneralesGroup
        {
            get
            {
                if ((this.mUIDatosgeneralesGroup == null))
                {
                    this.mUIDatosgeneralesGroup = new UIDatosgeneralesGroup(this);
                }
                return this.mUIDatosgeneralesGroup;
            }
        }
        
        public UIDatosdetrabajoWindow UIDatosdetrabajoWindow
        {
            get
            {
                if ((this.mUIDatosdetrabajoWindow == null))
                {
                    this.mUIDatosdetrabajoWindow = new UIDatosdetrabajoWindow(this);
                }
                return this.mUIDatosdetrabajoWindow;
            }
        }
        
        public UIRecursosGroup UIRecursosGroup
        {
            get
            {
                if ((this.mUIRecursosGroup == null))
                {
                    this.mUIRecursosGroup = new UIRecursosGroup(this);
                }
                return this.mUIRecursosGroup;
            }
        }
        
        public UISalarioMensualWindow UISalarioMensualWindow
        {
            get
            {
                if ((this.mUISalarioMensualWindow == null))
                {
                    this.mUISalarioMensualWindow = new UISalarioMensualWindow(this);
                }
                return this.mUISalarioMensualWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIAppWindow mUIAppWindow;
        
        private UIApmWindow mUIApmWindow;
        
        private UINombreWindow mUINombreWindow;
        
        private UISexoWindow mUISexoWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIDiaWindow mUIDiaWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIMesWindow mUIMesWindow;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIAnioWindow mUIAnioWindow;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIEntidadWindow mUIEntidadWindow;
        
        private UICurpWindow mUICurpWindow;
        
        private UIRfcWindow mUIRfcWindow;
        
        private UIDiaiWindow mUIDiaiWindow;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIMesiWindow mUIMesiWindow;
        
        private UIItemWindow5 mUIItemWindow5;
        
        private UIAnioiWindow mUIAnioiWindow;
        
        private UIItemWindow6 mUIItemWindow6;
        
        private UITiempoWindow mUITiempoWindow;
        
        private UIIDWindow mUIIDWindow;
        
        private UIPuestoWindow mUIPuestoWindow;
        
        private UISalariodiarioWindow mUISalariodiarioWindow;
        
        private UIGenerarNominaWindow mUIGenerarNominaWindow;
        
        private UIItem1050Window mUIItem1050Window;
        
        private UIItem2250Window mUIItem2250Window;
        
        private UIItem4500Window mUIItem4500Window;
        
        private UIItem225Window mUIItem225Window;
        
        private UIItem2250Window1 mUIItem2250Window1;
        
        private UIItem1075Window mUIItem1075Window;
        
        private UILimpiarNominaWindow mUILimpiarNominaWindow;
        
        private UIItemWindow7 mUIItemWindow7;
        
        private UIDatosgeneralesGroup mUIDatosgeneralesGroup;
        
        private UIDatosdetrabajoWindow mUIDatosdetrabajoWindow;
        
        private UIRecursosGroup mUIRecursosGroup;
        
        private UISalarioMensualWindow mUISalarioMensualWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIAppWindow : WinWindow
    {
        
        public UIAppWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "app";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAppEdit
        {
            get
            {
                if ((this.mUIAppEdit == null))
                {
                    this.mUIAppEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAppEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Fecha de Nacimiento";
                    this.mUIAppEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIAppEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAppEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIApmWindow : WinWindow
    {
        
        public UIApmWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "apm";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIApmEdit
        {
            get
            {
                if ((this.mUIApmEdit == null))
                {
                    this.mUIApmEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIApmEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIApmEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIApmEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UINombreWindow : WinWindow
    {
        
        public UINombreWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "nombre";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UINombreEdit
        {
            get
            {
                if ((this.mUINombreEdit == null))
                {
                    this.mUINombreEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINombreEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUINombreEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINombreEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISexoWindow : WinWindow
    {
        
        public UISexoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "sexo";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UISexoComboBox
        {
            get
            {
                if ((this.mUISexoComboBox == null))
                {
                    this.mUISexoComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUISexoComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISexoComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUISexoComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDiaWindow : WinWindow
    {
        
        public UIDiaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dia";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIDiaComboBox
        {
            get
            {
                if ((this.mUIDiaComboBox == null))
                {
                    this.mUIDiaComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIDiaComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIDiaComboBox;
            }
        }
        
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
                    this.mUIItemWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIDiaComboBox;
        
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "7";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMesWindow : WinWindow
    {
        
        public UIMesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "mes";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIMesComboBox
        {
            get
            {
                if ((this.mUIMesComboBox == null))
                {
                    this.mUIMesComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIMesComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIMesComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIMesComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIAnioWindow : WinWindow
    {
        
        public UIAnioWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "anio";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIAnioComboBox
        {
            get
            {
                if ((this.mUIAnioComboBox == null))
                {
                    this.mUIAnioComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIAnioComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIAnioComboBox;
            }
        }
        
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties[WinWindow.PropertyNames.ClassName] = "Edit";
                    this.mUIItemWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIAnioComboBox;
        
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIEntidadWindow : WinWindow
    {
        
        public UIEntidadWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "entidad";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIEntidadComboBox
        {
            get
            {
                if ((this.mUIEntidadComboBox == null))
                {
                    this.mUIEntidadComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIEntidadComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIEntidadComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIEntidadComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICurpWindow : WinWindow
    {
        
        public UICurpWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "curp";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UICurpEdit
        {
            get
            {
                if ((this.mUICurpEdit == null))
                {
                    this.mUICurpEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICurpEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUICurpEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICurpEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRfcWindow : WinWindow
    {
        
        public UIRfcWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rfc";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIRfcEdit
        {
            get
            {
                if ((this.mUIRfcEdit == null))
                {
                    this.mUIRfcEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIRfcEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIRfcEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIRfcEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDiaiWindow : WinWindow
    {
        
        public UIDiaiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "diai";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UISalarioDiarioComboBox
        {
            get
            {
                if ((this.mUISalarioDiarioComboBox == null))
                {
                    this.mUISalarioDiarioComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUISalarioDiarioComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Salario Diario";
                    this.mUISalarioDiarioComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISalarioDiarioComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUISalarioDiarioComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UISalarioDiarioEdit
        {
            get
            {
                if ((this.mUISalarioDiarioEdit == null))
                {
                    this.mUISalarioDiarioEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUISalarioDiarioEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Salario Diario";
                    this.mUISalarioDiarioEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISalarioDiarioEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUISalarioDiarioEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMesiWindow : WinWindow
    {
        
        public UIMesiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "mesi";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIMesiComboBox
        {
            get
            {
                if ((this.mUIMesiComboBox == null))
                {
                    this.mUIMesiComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIMesiComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIMesiComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIMesiComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow5 : WinWindow
    {
        
        public UIItemWindow5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIAnioiWindow : WinWindow
    {
        
        public UIAnioiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "anioi";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIAnioiComboBox
        {
            get
            {
                if ((this.mUIAnioiComboBox == null))
                {
                    this.mUIAnioiComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIAnioiComboBox.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIAnioiComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIAnioiComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow6 : WinWindow
    {
        
        public UIItemWindow6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITiempoWindow : WinWindow
    {
        
        public UITiempoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tiempo";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UITiempoEdit
        {
            get
            {
                if ((this.mUITiempoEdit == null))
                {
                    this.mUITiempoEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITiempoEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUITiempoEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITiempoEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIIDWindow : WinWindow
    {
        
        public UIIDWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "id";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIIDEdit
        {
            get
            {
                if ((this.mUIIDEdit == null))
                {
                    this.mUIIDEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIIDEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIIDEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIIDEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPuestoWindow : WinWindow
    {
        
        public UIPuestoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "puesto";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIPuestoEdit
        {
            get
            {
                if ((this.mUIPuestoEdit == null))
                {
                    this.mUIPuestoEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPuestoEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIPuestoEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIPuestoEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISalariodiarioWindow : WinWindow
    {
        
        public UISalariodiarioWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "salariodiario";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UISalariodiarioEdit
        {
            get
            {
                if ((this.mUISalariodiarioEdit == null))
                {
                    this.mUISalariodiarioEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUISalariodiarioEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISalariodiarioEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUISalariodiarioEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGenerarNominaWindow : WinWindow
    {
        
        public UIGenerarNominaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "generar";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinButton UIGenerarNominaButton
        {
            get
            {
                if ((this.mUIGenerarNominaButton == null))
                {
                    this.mUIGenerarNominaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGenerarNominaButton.SearchProperties[WinButton.PropertyNames.Name] = "Generar Nomina";
                    this.mUIGenerarNominaButton.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIGenerarNominaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGenerarNominaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem1050Window : WinWindow
    {
        
        public UIItem1050Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "semanal";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UIItem1050Text
        {
            get
            {
                if ((this.mUIItem1050Text == null))
                {
                    this.mUIItem1050Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem1050Text.SearchProperties[WinText.PropertyNames.Name] = "1050";
                    this.mUIItem1050Text.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItem1050Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem1050Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem2250Window : WinWindow
    {
        
        public UIItem2250Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "quincenal";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UIItem2250Text
        {
            get
            {
                if ((this.mUIItem2250Text == null))
                {
                    this.mUIItem2250Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem2250Text.SearchProperties[WinText.PropertyNames.Name] = "2250";
                    this.mUIItem2250Text.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItem2250Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem2250Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem4500Window : WinWindow
    {
        
        public UIItem4500Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "mensual";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UIItem4500Text
        {
            get
            {
                if ((this.mUIItem4500Text == null))
                {
                    this.mUIItem4500Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem4500Text.SearchProperties[WinText.PropertyNames.Name] = "4500";
                    this.mUIItem4500Text.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItem4500Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem4500Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem225Window : WinWindow
    {
        
        public UIItem225Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "prima";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UIItem225Text
        {
            get
            {
                if ((this.mUIItem225Text == null))
                {
                    this.mUIItem225Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem225Text.SearchProperties[WinText.PropertyNames.Name] = "225";
                    this.mUIItem225Text.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItem225Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem225Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem2250Window1 : WinWindow
    {
        
        public UIItem2250Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "aguinaldo";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UIItem2250Text
        {
            get
            {
                if ((this.mUIItem2250Text == null))
                {
                    this.mUIItem2250Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem2250Text.SearchProperties[WinText.PropertyNames.Name] = "2250";
                    this.mUIItem2250Text.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItem2250Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem2250Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem1075Window : WinWindow
    {
        
        public UIItem1075Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "salariobase";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UIItem1075Text
        {
            get
            {
                if ((this.mUIItem1075Text == null))
                {
                    this.mUIItem1075Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem1075Text.SearchProperties[WinText.PropertyNames.Name] = "1075";
                    this.mUIItem1075Text.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItem1075Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem1075Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILimpiarNominaWindow : WinWindow
    {
        
        public UILimpiarNominaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "limpiar";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinButton UILimpiarNominaButton
        {
            get
            {
                if ((this.mUILimpiarNominaButton == null))
                {
                    this.mUILimpiarNominaButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILimpiarNominaButton.SearchProperties[WinButton.PropertyNames.Name] = "Limpiar Nomina";
                    this.mUILimpiarNominaButton.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUILimpiarNominaButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILimpiarNominaButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow7 : WinWindow
    {
        
        public UIItemWindow7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDatosgeneralesGroup : WinGroup
    {
        
        public UIDatosgeneralesGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Datos generales";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinWindow UICurpWindow
        {
            get
            {
                if ((this.mUICurpWindow == null))
                {
                    this.mUICurpWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICurpWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUICurpWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUICurpWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUICurpWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUICurpWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDatosdetrabajoWindow : WinWindow
    {
        
        public UIDatosdetrabajoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "groupBox2";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinGroup UIDatosdetrabajoGroup
        {
            get
            {
                if ((this.mUIDatosdetrabajoGroup == null))
                {
                    this.mUIDatosdetrabajoGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIDatosdetrabajoGroup.SearchProperties[WinControl.PropertyNames.Name] = "Datos de trabajo";
                    this.mUIDatosdetrabajoGroup.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIDatosdetrabajoGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIDatosdetrabajoGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRecursosGroup : WinGroup
    {
        
        public UIRecursosGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Recursos";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinWindow UISemanalWindow
        {
            get
            {
                if ((this.mUISemanalWindow == null))
                {
                    this.mUISemanalWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUISemanalWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Salario Base";
                    this.mUISemanalWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUISemanalWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISemanalWindow;
            }
        }
        
        public WinWindow UIQuincenalWindow
        {
            get
            {
                if ((this.mUIQuincenalWindow == null))
                {
                    this.mUIQuincenalWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIQuincenalWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIQuincenalWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "5";
                    this.mUIQuincenalWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIQuincenalWindow;
            }
        }
        
        public WinWindow UIPrimaWindow
        {
            get
            {
                if ((this.mUIPrimaWindow == null))
                {
                    this.mUIPrimaWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIPrimaWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIPrimaWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
                    this.mUIPrimaWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIPrimaWindow;
            }
        }
        
        public WinWindow UIAguinaldoWindow
        {
            get
            {
                if ((this.mUIAguinaldoWindow == null))
                {
                    this.mUIAguinaldoWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIAguinaldoWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUIAguinaldoWindow.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUIAguinaldoWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUIAguinaldoWindow;
            }
        }
        
        public WinWindow UISalariobaseWindow
        {
            get
            {
                if ((this.mUISalariobaseWindow == null))
                {
                    this.mUISalariobaseWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUISalariobaseWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.STATIC", PropertyExpressionOperator.Contains));
                    this.mUISalariobaseWindow.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISalariobaseWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUISemanalWindow;
        
        private WinWindow mUIQuincenalWindow;
        
        private WinWindow mUIPrimaWindow;
        
        private WinWindow mUIAguinaldoWindow;
        
        private WinWindow mUISalariobaseWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISalarioMensualWindow : WinWindow
    {
        
        public UISalarioMensualWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "label16";
            this.WindowTitles.Add("Nomina");
            #endregion
        }
        
        #region Properties
        public WinText UISalarioMensualText
        {
            get
            {
                if ((this.mUISalarioMensualText == null))
                {
                    this.mUISalarioMensualText = new WinText(this);
                    #region Search Criteria
                    this.mUISalarioMensualText.SearchProperties[WinText.PropertyNames.Name] = "Salario Mensual";
                    this.mUISalarioMensualText.WindowTitles.Add("Nomina");
                    #endregion
                }
                return this.mUISalarioMensualText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISalarioMensualText;
        #endregion
    }
}
